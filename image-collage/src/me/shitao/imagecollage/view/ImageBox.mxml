<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   xmlns:view="me.shitao.imagecollage.view.*"
				   creationComplete="onCeationCompleteHandler(event)">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import me.shitao.imagecollage.event.ValueEvent;
			import me.shitao.imagecollage.vo.ScaleVo;
			
			import mx.events.FlexEvent;
			import mx.events.PropertyChangeEvent;
			import mx.events.ResizeEvent;
			import mx.managers.CursorManager;
			import mx.managers.CursorManagerPriority;
			
			private var file:FileReference = new FileReference();
			public var _scale:ScaleVo = new ScaleVo();
			private var state:String = "button";
			private var _imageData:ByteArray;
			private var _imageDataChanged:Boolean;
			private var _moveStageX:Number;
			private var _moveStageY:Number;
			[Embed(source="cursor_fist.png")]
			private static const _fist:Class;
			private var roundedMask:Sprite = new Sprite();

			protected function onCeationCompleteHandler(event:FlexEvent):void
			{
				_scale.addEventListener(PropertyChangeEvent.PROPERTY_CHANGE, scalePropertyChangeEventHandler);
				file.addEventListener(Event.SELECT, fileReference_selectHandler);
				file.addEventListener(Event.COMPLETE, fileReference_completeHandler);
				btn.addEventListener(MouseEvent.CLICK, fileButton_clickhandler);
				imgCanvas.rawChildren.addChild(roundedMask);
			}
			
			private function setMask():void
			{
				roundedMask.graphics.clear();
				roundedMask.graphics.beginFill(0xFF0000);
				roundedMask.graphics.drawRoundRect(0, 0,
					imgCanvas.width, imgCanvas.height,10, 10);
				roundedMask.graphics.endFill();
				img.mask = roundedMask;
			}
			
			private function fileButton_clickhandler(event:Event):void
			{
				file.browse([new FileFilter("Images (*.jpg, *.jpeg, *.gif, *.png)",
					"*.jpg;*.jpeg;*.gif;*.png")]);
			}
			
			private function fileReference_selectHandler(event:Event):void
			{
				file.load();
			}
			
			private function fileReference_completeHandler(evt:Event):void 
			{
				_imageData = file.data;
				img.source = file.data;
				state = "image";
				invalidateProperties();
			}
			
			private function img_completeHandler(event:Event):void
			{
				_scale.currentValue = 1;
				coordinateImgSize();
				setMask();
			}
			
			private function coordinateImgSize():void
			{
				var s:Number = 1;
				var sw:Number = 1;
				var sh:Number = 1;
				sw = imgCanvas.width / img.contentWidth;
				sh = imgCanvas.height / img.contentHeight;
				if(sh * img.contentWidth < imgCanvas.width )
				{
					s = sw;
				}
				else if(sw*img.contentHeight < imgCanvas.height)
				{
					s = sh;
				}
				else
				{
					s = sh;
				}
				img.width = img.contentWidth * s;
				img.height = img.contentHeight * s;
				img.x = (imgCanvas.width - img.width)/2;
				img.y = (imgCanvas.height - img.height)/2;
			}
		
			protected function closeBtn_clickHandler(event:MouseEvent):void
			{
				img.source = null;
				_imageData = null;
				state = "button";
				invalidateProperties();
			}
			
			protected function imgCanvas_rollOverHandler(event:MouseEvent):void
			{
				closeBtn.includeInLayout = true;
				closeBtn.visible = true;
			}
			
			protected function imgCanvas_rollOutHandler(event:MouseEvent):void
			{
				closeBtn.includeInLayout = false;
				closeBtn.visible = false;
				setImageButtonMode(false);
			}

			protected function img_clickHandler(event:MouseEvent):void
			{
				dispatchEvent(new ValueEvent("showScaleBar",{"img":img, "scale":_scale }, true));
				event.stopImmediatePropagation();
			}
			
			protected function img_resizeHandler(event:ResizeEvent):void
			{
				img.x = (imgCanvas.width - img.width)/2;
				img.y = (imgCanvas.height - img.height)/2;
			}
			
			protected function scalePropertyChangeEventHandler(event:PropertyChangeEvent):void
			{
				if(event.property == "currentValue")
				{
					var newScale:Number = Number(event.newValue)/Number(event.oldValue);
					img.width = img.width * newScale;
					img.height = img.height * newScale;
					img.x = (imgCanvas.width - img.width)/2;
					img.y = (imgCanvas.height - img.height)/2;
				}
			}
			
			public function getImageData():ByteArray
			{
				return _imageData;
			}
			
			public function setImageData(data:ByteArray):void
			{
				_imageData = data;
				_imageDataChanged = true;
				state = "image";
				invalidateProperties();
				invalidateDisplayList();
			}
			
			override protected function childrenCreated():void
			{
				super.childrenCreated();
				invalidateProperties();
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				if(_imageDataChanged)
				{
					_imageDataChanged = false;
					img.source = _imageData;
				}
			}
			
			override protected function commitProperties():void
			{
				super.commitProperties();
				if(state == "image")
				{
					if(imgCanvas && btnCanvas)
					{
						imgCanvas.includeInLayout = true;
						imgCanvas.visible = true;
						btnCanvas.includeInLayout = false;
						btnCanvas.visible = false;
					}
				}
				else
				{
					if(imgCanvas && btnCanvas)
					{
						imgCanvas.includeInLayout = false;
						imgCanvas.visible = false;
						btnCanvas.includeInLayout = true;
						btnCanvas.visible = true;
					}
				}
			}

			protected function img_mouseMoveHandler(event:MouseEvent):void
			{
				if(img.buttonMode){
					var x:Number = event.stageX - _moveStageX;
					var y:Number = event.stageY - _moveStageY;
					_moveStageX = event.stageX;
					_moveStageY = event.stageY;
					var leftTop:Point = img.contentToLocal(new Point(img.x + x, img.y+y));
					var imgBound:Rectangle = new Rectangle(Math.floor(leftTop.x), Math.floor(leftTop.y), Math.floor(img.width), Math.floor(img.height));
					var canvasBound:Rectangle = new Rectangle(0, 0, Math.floor(imgCanvas.width), Math.floor(imgCanvas.height));
					trace("canvasBound x="+canvasBound.x +",y="+canvasBound.y+",width="+canvasBound.width+",height="+canvasBound.height);
					var inter:Rectangle = imgBound.intersection(canvasBound);
					trace("inter x="+inter.x +",y="+inter.y+",width="+inter.width+",height="+inter.height);
					var ax:Number = x;
					var ay:Number = y;
					if(inter.x > canvasBound.x || inter.x + inter.width < canvasBound.x + canvasBound.width){
						ax = 0;
					}
					if(inter.y > canvasBound.y || inter.y + inter.height < canvasBound.y + canvasBound.height){
						ay = 0;
					}
					img.move(img.x + ax,img.y + ay);
				}
			}


			protected function img_mouseDownHandler(event:MouseEvent):void
			{
				setImageButtonMode(true);
				_moveStageX = event.stageX;
				_moveStageY = event.stageY;
			}
			
			protected function img_mouseUpHandler(event:MouseEvent):void
			{
				setImageButtonMode(false);
				_moveStageX = event.stageX;
				_moveStageY = event.stageY;
			}
			
			protected function setImageButtonMode(value:Boolean):void
			{
				img.buttonMode = value;
				img.useHandCursor = value;
				if(value){
					CursorManager.setCursor(_fist, CursorManagerPriority.HIGH);
				}else{
					CursorManager.removeAllCursors();
				}
			}
		]]>
	</fx:Script>
	<mx:Canvas id="imgCanvas" width="100%" height="100%" 
			   horizontalScrollPolicy="off" verticalScrollPolicy="off"
			   rollOver="imgCanvas_rollOverHandler(event);"
			   rollOut="imgCanvas_rollOutHandler(event);">
		<view:SmoothImage id="img" scaleContent="true"
						  maintainProjectionCenter="true"
						  maintainAspectRatio="true"
						  complete="img_completeHandler(event);"
						  mouseMove="img_mouseMoveHandler(event)"
						  mouseDown="img_mouseDownHandler(event)"
						  mouseUp="img_mouseUpHandler(event)"
				  		  click="img_clickHandler(event);" />
		<mx:Image id="closeBtn" source="@Embed(source='deleteIcon.png')" 
				  right="3" top="3" buttonMode="true" 
				  includeInLayout="false" visible="false"
				  click="closeBtn_clickHandler(event)"/>
	</mx:Canvas>
	<mx:Canvas id="btnCanvas" width="100%" height="100%" 
			   horizontalScrollPolicy="off" verticalScrollPolicy="off">
		<mx:Button id="btn" width="100%" height="100%" cornerRadius="5"
				   label="+添加图片" buttonMode="true" />
	</mx:Canvas>
</s:Group>
